{"version":3,"sources":["components/style.js","components/Main.js","components/Magnifier.js","components/NoMatch.js","components/theme.js","components/App.js","serviceWorker.js","index.js"],"names":["GlobalStyle","createGlobalStyle","_templateObject","StyledLink","styled","Link","_templateObject2","space","color","border","fontSize","defaultProps","px","py","Label","label","_templateObject3","Input","input","_templateObject4","Pre","props","react_default","a","createElement","dist","Object","assign","as","fontFamily","p","mt","LinkCard","_ref","title","url","borderRadius","boxShadow","my","to","concat","Main","m","fontWeight","Main_LinkCard","Slider","min","max","step","value","onChange","flexDirection","justifyContent","flex","mx","type","imageSource","nasa","hass","ImageView","_ref2","source","smallImageRate","oriImageDimention","enlargeRate","ReactImageMagnify","smallImage","alt","isFluidWidth","src","width","height","largeImage","enlargedImageContainerDimensions","x","y","Magnifier","_useState","useState","_useState2","slicedToArray","loading","setLoading","_useState3","_useState4","setOriImageDimention","_useState5","_useState6","setSmallImageRate","_useState7","_useState8","setEnlargeRate","useEffect","image","Image","onload","this","match","params","img","rate","bg","Magnifier_Slider","e","preventDefault","target","handleSmallImageRate","objectSpread","handleChangeEnlargeRateX","handleChangeEnlargeRateY","Magnifier_ImageView","style_Pre","JSON","stringify","NoMatch","theme","borders","colors","primary","primaryDark","primaryLight","text","primaryText","secondaryText","divider","accent","fontSizes","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","App","styled_components_browser_esm","Fragment","react_router_dom","basename","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.abef3783.chunk.js","sourcesContent":["import React from 'react';\n\nimport { createGlobalStyle } from 'styled-components';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { color, fontSize, space, border } from 'styled-system';\nimport { Text } from 'rebass';\n\nexport const GlobalStyle = createGlobalStyle`\n  *,*::before, *::after {\n    margin:0;\n    padding: 0;\n    box-sizing: inherit;    \n  }\n\n  html {\n    font-family: \"Lato\", sans-serif;\n    font-size: 62.5%;\n    font-weight: 400;\n    line-height: 1.5;\n    box-sizing: border-box;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  width: 100%;\n  text-decoration: none;\n  ${space}\n  ${color}\n  ${border}\n  ${fontSize}\n`;\n\nStyledLink.defaultProps = {\n  color: 'primaryText',\n  border: 'none',\n  px: 0,\n  py: 0\n};\n\nexport const Label = styled.label`\n  font-weight: bold;\n  ${space}\n  ${color}\n  ${fontSize}\n`;\n\nLabel.defaultProps = {\n  px: 1,\n  color: 'accent',\n  fontSize: 3\n};\n\nexport const Input = styled.input`\n  width: 100%;\n`;\n\nexport const Pre = props => (\n  <Text\n    {...props}\n    as=\"pre\"\n    fontFamily=\"Menlo, monospace\"\n    p={2}\n    mt={2}\n    color=\"secondaryText\"\n  />\n);\n","import React from 'react';\nimport { Box, Heading, Card } from 'rebass';\nimport { StyledLink } from './style';\n\nconst LinkCard = ({ title, url }) => (\n  <Card\n    borderRadius={2}\n    boxShadow=\"0 0.5rem 1rem rgba(0, 0, 0, .25)\"\n    fontSize=\"h4\"\n    p={3}\n    my={3}\n  >\n    <StyledLink to={`/check/${url}`}>{title}</StyledLink>\n  </Card>\n);\n\nconst Main = props => {\n  return (\n    <Box m={4} p={4}>\n      <Heading color=\"primary\" fontSize=\"h3\" fontWeight={300}>\n        圖片檢視測試\n      </Heading>\n      <LinkCard title=\"Example 1: Nasa Image\" url=\"nasa\" />\n      <LinkCard title=\"Example 2: Phto Sample\" url=\"hass\" />\n    </Box>\n  );\n};\n\nexport default Main;\n","import React, { useState, useEffect } from 'react';\nimport { Heading, Box, Flex, Text } from 'rebass';\nimport { Label, Input, StyledLink, Pre } from './style';\nimport ReactImageMagnify from 'react-image-magnify';\n\nconst Slider = ({ title, min, max, step, value, onChange }) => (\n  <Flex flexDirection=\"column\" justifyContent=\"center\" flex={1} mx={2}>\n    <Box>\n      <Text fontSize={2}>{title}</Text>\n    </Box>\n    <Flex mt={1}>\n      <Box flex={1}>\n        <Input\n          type=\"range\"\n          min={min}\n          max={max}\n          step={step}\n          value={value}\n          onChange={onChange}\n        />\n      </Box>\n      <Box>\n        <Label>{value}x</Label>\n      </Box>\n    </Flex>\n  </Flex>\n);\n\nconst imageSource = {\n  nasa:\n    'https://images-assets.nasa.gov/image/iss036e009053/iss036e009053~orig.jpg',\n  hass: 'https://cdn.hasselblad.com/samples/B0000994.jpg'\n};\n\nconst ImageView = ({\n  source,\n  smallImageRate,\n  oriImageDimention,\n  enlargeRate\n}) => (\n  <ReactImageMagnify\n    {...{\n      smallImage: {\n        alt: 'Wristwatch by Ted Baker London',\n        isFluidWidth: false,\n        src: source,\n        width: oriImageDimention.width * smallImageRate,\n        height: oriImageDimention.height * smallImageRate\n      },\n      largeImage: {\n        src: source,\n        width: oriImageDimention.width,\n        height: oriImageDimention.height\n      },\n      enlargedImageContainerDimensions: {\n        width: enlargeRate.x,\n        height: enlargeRate.y\n      }\n    }}\n  />\n);\n\nconst numToPercent = rate => ({\n  x: `${rate.x * 100}%`,\n  y: `${rate.y * 100}%`\n});\n\nconst Magnifier = props => {\n  const [loading, setLoading] = useState(false);\n\n  const [oriImageDimention, setOriImageDimention] = useState({\n    width: 0,\n    height: 0\n  });\n\n  const [smallImageRate, setSmallImageRate] = useState(0.1);\n  const [enlargeRate, setEnlargeRate] = useState({ x: 2, y: 1.5 });\n\n  useEffect(() => {\n    setLoading(true);\n    let image = new Image(); // or document.createElement('img')\n    image.onload = function() {\n      const width = this.width;\n      const height = this.height;\n      // console.log({ width, height });\n      setOriImageDimention({ width, height });\n      setLoading(false);\n    };\n    image.src = imageSource[props.match.params.img];\n\n    return () => {\n      //unmount image\n      if (!image) {\n        return;\n      }\n      image.onload = function() {};\n      image = null;\n    };\n  }, [props.match.params.img]);\n\n  const handleSmallImageRate = e => {\n    e.preventDefault();\n    setSmallImageRate(e.target.value);\n  };\n\n  const handleChangeEnlargeRateX = e => {\n    e.preventDefault();\n    setEnlargeRate({\n      ...enlargeRate,\n      x: e.target.value\n    });\n  };\n\n  const handleChangeEnlargeRateY = e => {\n    e.preventDefault();\n    setEnlargeRate({\n      ...enlargeRate,\n      y: e.target.value\n    });\n  };\n\n  return (\n    <Box>\n      {/* 調整參數bar */}\n      <Flex px={3} color=\"text\" bg=\"primaryDark\" justifyContent=\"center\">\n        <Box>\n          <Heading fontSize=\"h3\" fontWeight={900}>\n            {props.match.params.img}\n          </Heading>\n        </Box>\n        <Flex px={3} flex={1}>\n          <Slider\n            title=\"縮圖比例\"\n            min={0.05}\n            max={0.12}\n            step={0.01}\n            value={smallImageRate}\n            onChange={e => handleSmallImageRate(e)}\n          />\n          <Slider\n            title=\"檢視寬度\"\n            min={1}\n            max={5}\n            step={0.1}\n            value={enlargeRate.x}\n            onChange={e => handleChangeEnlargeRateX(e)}\n          />\n          <Slider\n            title=\"檢視高度\"\n            min={1}\n            max={2}\n            step={0.1}\n            value={enlargeRate.y}\n            onChange={e => handleChangeEnlargeRateY(e)}\n          />\n          <Box mt={4}>\n            <StyledLink\n              to=\"/\"\n              color=\"text\"\n              border=\"1px solid\"\n              fontSize={4}\n              px={2}\n              py={1}\n            >\n              Back\n            </StyledLink>\n          </Box>\n        </Flex>\n      </Flex>\n\n      {/* 小圖大圖 */}\n      <Flex p={3} justifyContent=\"center\">\n        <Box width={['100vw', '100vw', '100vw']}>\n          {loading && <h1>Loading...</h1>}\n          <ImageView\n            source={imageSource[props.match.params.img]}\n            smallImageRate={smallImageRate}\n            oriImageDimention={oriImageDimention}\n            enlargeRate={numToPercent(enlargeRate)}\n          />\n          {!loading && <Pre>{JSON.stringify(oriImageDimention, null, 2)}</Pre>}\n        </Box>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default Magnifier;\n","import React from 'react';\n\nconst NoMatch = props => {\n  return <h1>404 not found</h1>;\n};\n\nexport default NoMatch;\n","const theme = {\n  borders: ['1px solid'],\n  space: [0, '0.5rem', '1rem', '1.5rem', '2rem'],\n  colors: {\n    primary: '#009688',\n    primaryDark: '#00796B',\n    primaryLight: '#B2DFDB',\n    text: '#FFFFFF',\n    primaryText: '#212121',\n    secondaryText: '#757575',\n    divider: '#BDBDBD',\n    accent: '#FFC107'\n  }\n};\n\nconst fontSizes = [\n  '1rem',\n  '1.2rem',\n  '1.4rem',\n  '1.6rem',\n  '2rem',\n  '2.4rem',\n  '3.4rem',\n  '4.8rem',\n  '6rem',\n  '9.6rem'\n];\n\ntheme.fontSizes = {\n  ...fontSizes,\n  h1: fontSizes[9],\n  h2: fontSizes[8],\n  h3: fontSizes[7],\n  h4: fontSizes[6],\n  h5: fontSizes[5],\n  h6: fontSizes[4],\n  subtitle1: fontSizes[3],\n  subtitle2: fontSizes[2],\n  body1: fontSizes[3],\n  body2: fontSizes[2],\n  button: fontSizes[2],\n  caption: fontSizes[1],\n  overline: fontSizes[0]\n};\n\nexport default theme;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Main from './Main';\nimport Magnifier from './Magnifier';\nimport NoMatch from './NoMatch';\nimport { ThemeProvider } from 'styled-components';\nimport { GlobalStyle } from './style';\nimport theme from './theme';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <>\n        <GlobalStyle />\n        <BrowserRouter basename=\"image-magnifier\">\n          <Switch>\n            <Route exact path=\"/\" component={Main} />\n            <Route exact path=\"/check/:img\" component={Magnifier} />\n            <Route component={NoMatch} />\n          </Switch>\n        </BrowserRouter>\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}